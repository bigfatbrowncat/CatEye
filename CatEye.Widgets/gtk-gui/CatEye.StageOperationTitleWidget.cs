
// This file has been generated by the GUI designer. Do not modify.
namespace CatEye
{
	public partial class StageOperationTitleWidget
	{
		private global::Gtk.HBox hbox;

		private global::Gtk.CheckButton title_checkbutton;

		private global::Gtk.Label title_label;

		private global::Gtk.ToggleButton edit_togglebutton;

		private global::Gtk.ToggleButton freeze_togglebutton;

		private global::Gtk.Button up_button;

		private global::Gtk.Button down_button;

		private global::Gtk.Button remove_button;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget CatEye.StageOperationTitleWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "CatEye.StageOperationTitleWidget";
			// Container child CatEye.StageOperationTitleWidget.Gtk.Container+ContainerChild
			this.hbox = new global::Gtk.HBox ();
			this.hbox.Name = "hbox";
			// Container child hbox.Gtk.Box+BoxChild
			this.title_checkbutton = new global::Gtk.CheckButton ();
			this.title_checkbutton.CanFocus = true;
			this.title_checkbutton.Name = "title_checkbutton";
			this.title_checkbutton.Label = global::Mono.Unix.Catalog.GetString ("checkbutton2");
			this.title_checkbutton.DrawIndicator = true;
			this.title_checkbutton.UseUnderline = true;
			this.title_checkbutton.Remove (this.title_checkbutton.Child);
			// Container child title_checkbutton.Gtk.Container+ContainerChild
			this.title_label = new global::Gtk.Label ();
			this.title_label.Name = "title_label";
			this.title_label.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Title</b>");
			this.title_label.UseMarkup = true;
			this.title_label.SingleLineMode = true;
			this.title_checkbutton.Add (this.title_label);
			this.hbox.Add (this.title_checkbutton);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox[this.title_checkbutton]));
			w2.Position = 0;
			// Container child hbox.Gtk.Box+BoxChild
			this.edit_togglebutton = new global::Gtk.ToggleButton ();
			this.edit_togglebutton.CanFocus = true;
			this.edit_togglebutton.Name = "edit_togglebutton";
			this.edit_togglebutton.Relief = ((global::Gtk.ReliefStyle)(2));
			this.edit_togglebutton.Label = null;
			this.hbox.Add (this.edit_togglebutton);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox[this.edit_togglebutton]));
			w3.Position = 1;
			w3.Expand = false;
			w3.Fill = false;
			// Container child hbox.Gtk.Box+BoxChild
			this.freeze_togglebutton = new global::Gtk.ToggleButton ();
			this.freeze_togglebutton.CanFocus = true;
			this.freeze_togglebutton.Name = "freeze_togglebutton";
			this.freeze_togglebutton.Relief = ((global::Gtk.ReliefStyle)(2));
			this.freeze_togglebutton.Label = null;
			this.hbox.Add (this.freeze_togglebutton);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox[this.freeze_togglebutton]));
			w4.Position = 2;
			w4.Expand = false;
			w4.Fill = false;
			// Container child hbox.Gtk.Box+BoxChild
			this.up_button = new global::Gtk.Button ();
			this.up_button.CanFocus = true;
			this.up_button.Name = "up_button";
			this.up_button.Relief = ((global::Gtk.ReliefStyle)(2));
			this.up_button.Label = null;
			this.hbox.Add (this.up_button);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hbox[this.up_button]));
			w5.Position = 3;
			w5.Expand = false;
			w5.Fill = false;
			// Container child hbox.Gtk.Box+BoxChild
			this.down_button = new global::Gtk.Button ();
			this.down_button.CanFocus = true;
			this.down_button.Name = "down_button";
			this.down_button.Relief = ((global::Gtk.ReliefStyle)(2));
			this.down_button.Label = null;
			this.hbox.Add (this.down_button);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hbox[this.down_button]));
			w6.Position = 4;
			w6.Expand = false;
			w6.Fill = false;
			// Container child hbox.Gtk.Box+BoxChild
			this.remove_button = new global::Gtk.Button ();
			this.remove_button.CanFocus = true;
			this.remove_button.Name = "remove_button";
			this.remove_button.Relief = ((global::Gtk.ReliefStyle)(2));
			this.remove_button.Label = null;
			this.hbox.Add (this.remove_button);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.hbox[this.remove_button]));
			w7.Position = 5;
			w7.Expand = false;
			w7.Fill = false;
			this.Add (this.hbox);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.Shown += new global::System.EventHandler (this.OnShown);
			this.title_checkbutton.Toggled += new global::System.EventHandler (this.OnTitleCheckbuttonToggled);
			this.edit_togglebutton.Toggled += new global::System.EventHandler (this.OnViewTogglebuttonToggled);
			this.edit_togglebutton.StateChanged += new global::Gtk.StateChangedHandler (this.OnEditTogglebuttonStateChanged);
			this.edit_togglebutton.StyleSet += new global::Gtk.StyleSetHandler (this.OnEditTogglebuttonStyleSet);
			this.freeze_togglebutton.Toggled += new global::System.EventHandler (this.OnFreezeTogglebuttonToggled);
			this.freeze_togglebutton.StateChanged += new global::Gtk.StateChangedHandler (this.OnFreezeTogglebuttonStateChanged);
			this.freeze_togglebutton.StyleSet += new global::Gtk.StyleSetHandler (this.OnFreezeTogglebuttonStyleSet);
			this.up_button.Clicked += new global::System.EventHandler (this.OnUpButtonClicked);
			this.up_button.StateChanged += new global::Gtk.StateChangedHandler (this.OnUpButtonStateChanged);
			this.up_button.StyleSet += new global::Gtk.StyleSetHandler (this.OnUpButtonStyleSet);
			this.down_button.Clicked += new global::System.EventHandler (this.OnDownButtonClicked);
			this.down_button.StateChanged += new global::Gtk.StateChangedHandler (this.OnDownButtonStateChanged);
			this.down_button.StyleSet += new global::Gtk.StyleSetHandler (this.OnDownButtonStyleSet);
			this.remove_button.Clicked += new global::System.EventHandler (this.OnRemoveButtonClicked);
			this.remove_button.StateChanged += new global::Gtk.StateChangedHandler (this.OnRemoveButtonStateChanged);
			this.remove_button.StyleSet += new global::Gtk.StyleSetHandler (this.OnRemoveButtonStyleSet);
		}
	}
}
