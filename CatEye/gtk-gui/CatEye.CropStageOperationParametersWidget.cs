
// This file has been generated by the GUI designer. Do not modify.
namespace CatEye
{
	public partial class CropStageOperationParametersWidget
	{
		private global::Gtk.Table table1;
		private global::Gtk.ComboBoxEntry aspect_comboboxentry;
		private global::Gtk.SpinButton bottom_spinbutton;
		private global::Gtk.Label label7;
		private global::Gtk.Label label8;
		private global::Gtk.Label label9;
		private global::Gtk.SpinButton left_spinbutton;
		private global::Gtk.SpinButton right_spinbutton;
		private global::Gtk.SpinButton top_spinbutton;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget CatEye.CropStageOperationParametersWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "CatEye.CropStageOperationParametersWidget";
			// Container child CatEye.CropStageOperationParametersWidget.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(3)), ((uint)(3)), false);
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			this.table1.BorderWidth = ((uint)(4));
			// Container child table1.Gtk.Table+TableChild
			this.aspect_comboboxentry = global::Gtk.ComboBoxEntry.NewText ();
			this.aspect_comboboxentry.Name = "aspect_comboboxentry";
			this.table1.Add (this.aspect_comboboxentry);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.aspect_comboboxentry]));
			w1.TopAttach = ((uint)(2));
			w1.BottomAttach = ((uint)(3));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(3));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.bottom_spinbutton = new global::Gtk.SpinButton (0, 1, 0.01);
			this.bottom_spinbutton.CanFocus = true;
			this.bottom_spinbutton.Name = "bottom_spinbutton";
			this.bottom_spinbutton.Adjustment.PageIncrement = 0.1;
			this.bottom_spinbutton.ClimbRate = 0.01;
			this.bottom_spinbutton.Digits = ((uint)(3));
			this.bottom_spinbutton.Numeric = true;
			this.table1.Add (this.bottom_spinbutton);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.bottom_spinbutton]));
			w2.TopAttach = ((uint)(1));
			w2.BottomAttach = ((uint)(2));
			w2.LeftAttach = ((uint)(2));
			w2.RightAttach = ((uint)(3));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label7 = new global::Gtk.Label ();
			this.label7.Name = "label7";
			this.label7.Xalign = 1F;
			this.label7.LabelProp = global::Mono.Unix.Catalog.GetString ("Left - right:");
			this.table1.Add (this.label7);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.label7]));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label8 = new global::Gtk.Label ();
			this.label8.Name = "label8";
			this.label8.Xalign = 1F;
			this.label8.LabelProp = global::Mono.Unix.Catalog.GetString ("Top - bottom:");
			this.table1.Add (this.label8);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.label8]));
			w4.TopAttach = ((uint)(1));
			w4.BottomAttach = ((uint)(2));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label9 = new global::Gtk.Label ();
			this.label9.Name = "label9";
			this.label9.Xalign = 1F;
			this.label9.LabelProp = global::Mono.Unix.Catalog.GetString ("Aspect ratio:");
			this.table1.Add (this.label9);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.label9]));
			w5.TopAttach = ((uint)(2));
			w5.BottomAttach = ((uint)(3));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.left_spinbutton = new global::Gtk.SpinButton (0, 1, 0.01);
			this.left_spinbutton.CanFocus = true;
			this.left_spinbutton.Name = "left_spinbutton";
			this.left_spinbutton.Adjustment.PageIncrement = 0.1;
			this.left_spinbutton.ClimbRate = 0.01;
			this.left_spinbutton.Digits = ((uint)(3));
			this.left_spinbutton.Numeric = true;
			this.table1.Add (this.left_spinbutton);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.left_spinbutton]));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(2));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.right_spinbutton = new global::Gtk.SpinButton (0, 1, 0.01);
			this.right_spinbutton.CanFocus = true;
			this.right_spinbutton.Name = "right_spinbutton";
			this.right_spinbutton.Adjustment.PageIncrement = 0.1;
			this.right_spinbutton.ClimbRate = 0.01;
			this.right_spinbutton.Digits = ((uint)(3));
			this.right_spinbutton.Numeric = true;
			this.table1.Add (this.right_spinbutton);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.right_spinbutton]));
			w7.LeftAttach = ((uint)(2));
			w7.RightAttach = ((uint)(3));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.top_spinbutton = new global::Gtk.SpinButton (0, 1, 0.01);
			this.top_spinbutton.CanFocus = true;
			this.top_spinbutton.Name = "top_spinbutton";
			this.top_spinbutton.Adjustment.PageIncrement = 0.1;
			this.top_spinbutton.ClimbRate = 0.01;
			this.top_spinbutton.Digits = ((uint)(3));
			this.top_spinbutton.Numeric = true;
			this.table1.Add (this.top_spinbutton);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.top_spinbutton]));
			w8.TopAttach = ((uint)(1));
			w8.BottomAttach = ((uint)(2));
			w8.LeftAttach = ((uint)(1));
			w8.RightAttach = ((uint)(2));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.top_spinbutton.ValueChanged += new global::System.EventHandler (this.OnTopSpinbuttonValueChanged);
			this.right_spinbutton.ValueChanged += new global::System.EventHandler (this.OnRightSpinbuttonValueChanged);
			this.left_spinbutton.ValueChanged += new global::System.EventHandler (this.OnLeftSpinbuttonValueChanged);
			this.bottom_spinbutton.ValueChanged += new global::System.EventHandler (this.OnBottomSpinbuttonValueChanged);
			this.aspect_comboboxentry.Changed += new global::System.EventHandler (this.OnAspectComboboxentryChanged);
		}
	}
}
